// The variable below contains function.
var another = function(ev) {
  console.log(ev)
}


// This object contains properties and a function inside the say_hi key.
var myObj = {
  name: "Leeroy Jenkins",
  address: "The Internets",
  say_hi: function() {
    console.log('Hi!')
  }
}


// This function returns functions
function generator(container, message) {
  // I have a scope! It contains container and message

  return function(ev) {
    // I also have a scope! I contains `ev` AND I have access
    // to the scope of the function that generated me.
    // The scope returned with the function is called a closure.

    console.log("Got event:", ev);
    $(`#${container}`).append(`${message} `);
  }

}


// The two variables below contain functions generated by the generator() call
var callback = generator('container1', 'Hello there!')
var hollaback = generator('container2', 'Hello too!')

// Here we're assigning generated functions to button clicks.
$('#button1').on('click', callback);
$('#button2').on('click', hollaback);


// An asynchronous call to get tweets from tweets.json` and render them.
$('#get-tweets').on('click', function(){

  $.getJSON('/tweets.json', function(result) {

    $('#tweets-container').empty();
    result.forEach(function(tweet){
      var html =
        `<p>handle: ${tweet.user.handle}</p>
         <p>${tweet.content.text}</p>
         <hr>`;

       $('#tweets-container').append(html);
    })

  })

});
